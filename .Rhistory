library(dplyr)
library(tidyverse)
landslides <- read_csv("landslides_auckland_region_only_strict.csv")
print(colnames(landslides))
landslides <- landslides %>% dplyr::select(-`OBJECTID *`, -`Landslide Database GUID *`, -`Landslide Description`, -`Landslide Description`, -Name, -`Activity Type`, -Description, -`Source Description`, -`Parent ID Value`, - `Parent ID Name`, -`Primary Movement ID`, -`Created On`, -`Activity Recent`, -`Area Method`, -`Cause Primary`, -`Cause Secondary`, -Comments, -`Damage Assets`, -`Damage Cost Base`, -`Damage Deaths`, -`Damage Description`, -`Damage Environmental`, -`Damage Injuries`, -`Date Confidence`, -`Dating Method Accuracy`, -Deaths, -Depletion, -`Depth Rupture`, -Disabled, -`Geometry Modified On`, -`How was this Landslide Found?`, -`How Serious`, -`Impacted Features`, -Injuries, -`Is Duplicate Landslide`, -`Is Public`, -`Location Accuracy`, -`Location Description`, -`Material Debris Type`, -`Material Type`, -`Shape *`, -`GlobalID *`, -`Primary Movement Type Sub Class ID`, -`Unique ID of Landslide in Original Database`, -`Modified On`, -`Recent Date Occurrence`, -`Upslope Catchment Description`, `Trigger Rainfall 7 Day`, `Trigger Rainfall 3 Day`, `Trigger Rainfall 1 Day`, `Trigger Earthquake`, `Source Type`, `Source Bulk Upload`, `Size of Slip`, `Secondary Movement`, `Region`, `Recent Movement`, `QA Status`, `QA Level`, `Project ID`, `Primary Movement`, `Physical Setting`, `Number of Slips`, `Movement Style`, `Movement`, `Method`)
View(landslides)
setwd()
setwd("C:/Users/sssan/University/GEOG761")
print(colnames(landslides))
landslides <- read_csv("landslides_auckland_region_only_strict.csv")
landslides <- landslides %>% dplyr::select(-`OBJECTID *`, -`Landslide Database GUID *`, -`Landslide Description`, -`Landslide Description`, -Name, -`Activity Type`, -Description, -`Source Description`, -`Parent ID Value`, - `Parent ID Name`, -`Primary Movement ID`, -`Created On`, -`Activity Recent`, -`Area Method`, -`Cause Primary`, -`Cause Secondary`, -Comments, -`Damage Assets`, -`Damage Cost Base`, -`Damage Deaths`, -`Damage Description`, -`Damage Environmental`, -`Damage Injuries`, -`Date Confidence`, -`Dating Method Accuracy`, -Deaths, -Depletion, -`Depth Rupture`, -Disabled, -`Geometry Modified On`, -`How was this Landslide Found?`, -`How Serious`, -`Impacted Features`, -Injuries, -`Is Duplicate Landslide`, -`Is Public`, -`Location Accuracy`, -`Location Description`, -`Material Debris Type`, -`Material Type`, -`Shape *`, -`GlobalID *`, -`Primary Movement Type Sub Class ID`, -`Unique ID of Landslide in Original Database`, -`Modified On`, -`Recent Date Occurrence`, -`Upslope Catchment Description`, -`Trigger Rainfall 7 Day`, -`Trigger Rainfall 3 Day`, -`Trigger Rainfall 1 Day`, -`Trigger Earthquake`, -`Source Type`, -`Source Bulk Upload`, -`Size of Slip`, -`Secondary Movement`, -`Region`, -`Recent Movement`, -`QA Status`, -`QA Level`, -`Project ID`, -`Primary Movement`, -`Physical Setting`, -`Number of Slips`, -`Movement Style`, -`Movement`, -`Method`)
View(landslides)
landslides <- landslides %>% dplyr::select(-Aspect, -`Damage Cost`, -Geology, -Geomorphology, -`Location Accuracy GNS`, -Vegetation)
landslides <- landslides %>% dplyr::select(-`Date Occurence`)
unique(landslides$`Landslide Type`)
landslides <- landslides %>% dplyr::select(-`Landslide Type`)
landslides <- landslides %>%
filter(!is.na(`Area Maximum`))
landslides <- landslides %>%
filter(!is.na(`Area Maximum`))
landslides <- landslides %>%
filter(!is.na(`Area Maximum`))
landslides <- landslides %>%
filter(!is.na(`Area Maximum`))
landslides <- landslides %>%
filter(!is.na(`Angle Rupture Surface`))
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides[landslides == "<Null>"] <- NA
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides <-landslides[!is.na(landslides$Accumulation)]
landslides <-landslides[!is.na(landslides$Accumulation), ]
landslides <- read_csv("landslides_auckland_region_only_strict.csv")
print(colnames(landslides))
landslides <- landslides %>% dplyr::select(-`OBJECTID *`, -`Landslide Database GUID *`, -`Landslide Description`, -`Landslide Description`, -Name, -`Activity Type`, -Description, -`Source Description`, -`Parent ID Value`, - `Parent ID Name`, -`Primary Movement ID`, -`Created On`, -`Activity Recent`, -`Area Method`, -`Cause Primary`, -`Cause Secondary`, -Comments, -`Damage Assets`, -`Damage Cost Base`, -`Damage Deaths`, -`Damage Description`, -`Damage Environmental`, -`Damage Injuries`, -`Date Confidence`, -`Dating Method Accuracy`, -Deaths, -Depletion, -`Depth Rupture`, -Disabled, -`Geometry Modified On`, -`How was this Landslide Found?`, -`How Serious`, -`Impacted Features`, -Injuries, -`Is Duplicate Landslide`, -`Is Public`, -`Location Accuracy`, -`Location Description`, -`Material Debris Type`, -`Material Type`, -`Shape *`, -`GlobalID *`, -`Primary Movement Type Sub Class ID`, -`Unique ID of Landslide in Original Database`, -`Modified On`, -`Recent Date Occurrence`, -`Upslope Catchment Description`, -`Trigger Rainfall 7 Day`, -`Trigger Rainfall 3 Day`, -`Trigger Rainfall 1 Day`, -`Trigger Earthquake`, -`Source Type`, -`Source Bulk Upload`, -`Size of Slip`, -`Secondary Movement`, -`Region`, -`Recent Movement`, -`QA Status`, -`QA Level`, -`Project ID`, -`Primary Movement`, -`Physical Setting`, -`Number of Slips`, -`Movement Style`, -`Movement`, -`Method`)
landslides <- landslides %>% dplyr::select(-Aspect, -`Damage Cost`, -Geology, -Geomorphology, -`Location Accuracy GNS`, -Vegetation)
landslides <- landslides %>% dplyr::select(-`Date Occurence`)
landslides <- landslides %>% dplyr::select(-`Landslide Type`, -Accumulation)
landslides[landslides == "<Null>"] <- NA
landslides <- landslides[!is.na(landslides$`Area Maximum`), ]
landslides <-landslides[!is.na(landslides$Accumulation), ]
install.packages("naniar")
install.packages("naniar")
